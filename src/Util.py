''' File with some shared (and useful) utility functions.
'''

import hmac

def generateHMACTag(key, content):
	print("HMAC-------")
	print(key)
	print(content)
	print("-----------")
	digester = hmac.new(str(key))
	digester.update(content)
	return digester.hexdigest()

def modExp(a, b, m):
	a %= m
	ret = None
	if b == 0:
		ret = 1
	elif b % 2:
		ret = a * modExp(a, b-1, m)
	else:
		ret = modExp(a, b//2, m)
		ret *= ret
	return (ret % m)

def iterModExp(a, b, m):
	r = 1
	while 1:
		if b % 2 == 1:
			r = (r * a) % m
		b /= 2
		if b == 0:
			break
		a = (a * a) % m
	return r

if __name__ == "__main__":
	print(iterModExp(10491126334682908855106162583856266088312413402498547504348579206593253528152384237196396677356516243560578642052200209001333098989160228872883590835825127, 280504771098284758385961606650522585963, 176157928644251046330029252790155664021187471956249921315383522515377696630123201220882080300983685034196235748527759042251556978720573697443226024083215890925454229689264039372137857395784052600375937574771220008219359232349329038727121672247809707567241971201506757928514053862713721056684159306287252982867))
	print(modExp(10491126334682908855106162583856266088312413402498547504348579206593253528152384237196396677356516243560578642052200209001333098989160228872883590835825127, 280504771098284758385961606650522585963, 176157928644251046330029252790155664021187471956249921315383522515377696630123201220882080300983685034196235748527759042251556978720573697443226024083215890925454229689264039372137857395784052600375937574771220008219359232349329038727121672247809707567241971201506757928514053862713721056684159306287252982867))